{"version":3,"sources":["components/Navigation.js","components/Fullpage.js","components/DownIcon.js","sections/TitleSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillsSection.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","changeTheme","callback","className","this","theme","to","spy","smooth","offset","duration","onSetActive","handleSetActive","onClick","src","alt","Component","Fullpage","children","DownIcon","data","icons","down","TitleSection","state","name","title","subtitle","Object","keys","links","map","key","index","url","activeClass","AboutSection","sections","items","content","SkillCard","skill","image","width","height","SkillsSection","App","themesArray","indexOf","length","setState","themes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5a0ebed9.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Link} from \"react-scroll\";\r\n\r\nimport './Navigation.css'\r\n\r\nclass Navigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeTheme = this.props.callback\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={`navigation ${this.props.theme || ''}`}>\r\n                    <Link className=\"nav-item\" to=\"title\" spy={true} smooth={true} offset={0} duration={500}\r\n                          onSetActive={this.handleSetActive}>\r\n                        Title\r\n                    </Link>\r\n                    <Link className=\"nav-item\" to=\"about\" spy={true} smooth={true} offset={0} duration={500}\r\n                          onSetActive={this.handleSetActive}>\r\n                        About\r\n                    </Link>\r\n                    <Link className=\"nav-item\" to=\"skills\" spy={true} smooth={true} offset={0} duration={500}\r\n                          onSetActive={this.handleSetActive}>\r\n                        Skills\r\n                    </Link>\r\n                    <div className=\"nav-item\" onClick={this.changeTheme}>\r\n                        <img src=\"./images/theme-change.png\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation","import React,{Component} from \"react\";\r\n\r\nimport './Fullpage.css'\r\n\r\nclass Fullpage extends Component{\r\n    render(){\r\n        let {children,className} = this.props\r\n        return(\r\n            <div className={`fullpage ${className || ''}`}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Fullpage;","import React,{Component} from \"react\";\r\n\r\nimport './DownIcon.css'\r\nimport data from \"../data\";\r\n\r\nclass DownIcon extends Component{\r\n    render(){\r\n        return (\r\n            <div className={`downIcon ${this.props.className || ''}`}>\r\n                <img src={data.icons.down} alt=\"Down icon\"/>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default DownIcon","import React, {Component} from \"react\";\r\nimport {SocialIcon} from \"react-social-icons\";\r\nimport {Link,Element} from \"react-scroll\";\r\n\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport DownIcon from \"../components/DownIcon\";\r\n\r\n\r\nimport data from \"../data\";\r\nimport './TitleSection.css'\r\n\r\nclass TitleSection extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.state.theme = props.theme;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Element name=\"title\" className=\"element\"/>\r\n                <Fullpage className={`${this.props.theme || ''} first`}>\r\n                    <h1 className=\"title\">\r\n                        {\r\n                            data.title\r\n                        }\r\n                    </h1>\r\n                    <div>\r\n                        <h2>\r\n                            {data.subtitle}\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"icons\">\r\n                        {\r\n                            Object.keys(data.links).map((key,index) => {\r\n                                return (\r\n                                    <SocialIcon key={index} url={data.links[key]}/>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n                </Fullpage>\r\n                <Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={0} duration={500} onSetActive={this.handleSetActive}>\r\n                    <DownIcon/>\r\n                </Link>\r\n                <Element name=\"about\" className=\"element\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TitleSection;","import React,{Component} from \"react\";\r\nimport data from \"../data\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport {Element, Link} from \"react-scroll\";\r\n\r\nclass AboutSection extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {};\r\n        this.state.theme = props.theme;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Fullpage className={`${this.props.theme} second`}>\r\n                    <h2>{data.sections[0].title}</h2>\r\n                    <pre>{data.sections[0].items[0].content}</pre>\r\n                </Fullpage>\r\n                <Link activeClass=\"active\" to=\"skills\" spy={true} smooth={true} offset={0} duration={500} onSetActive={this.handleSetActive}>\r\n                    <DownIcon/>\r\n                </Link>\r\n                <Element name=\"skills\" className=\"element\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AboutSection;","import React,{Component} from \"react\";\r\n\r\nimport './SkillCard.css'\r\n\r\nclass SkillCard extends Component{\r\n    render(){\r\n        let {skill} = this.props\r\n        return ( <div  className=\"card\">\r\n            <img src={skill.content.image} width=\"100px\" height=\"auto\" alt={`skill.content.title logo`}/>\r\n            <p>{skill.content.title}</p>\r\n        </div> );\r\n    }\r\n}\r\n\r\nexport default SkillCard;","import React, {Component} from \"react\";\r\nimport data from \"../data\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport {Link} from \"react-scroll\";\r\nimport SkillCard from \"../components/SkillCard\";\r\n\r\nclass SkillsSection extends Component {\r\n    state={}\r\n    constructor(props) {\r\n        super(props);\r\n        this.state.theme = props.theme;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Fullpage className={`${this.props.theme} third`}>\r\n                    <h2>{data.sections[1].title}</h2>\r\n                    <div className=\"skills\">\r\n                        {\r\n                            data.sections[1].items.map((skill,index) => {\r\n                                return (\r\n                                    <SkillCard skill={skill} key={index}/>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <Link activeClass=\"active\" to=\"title\" spy={true} smooth={true} offset={0} duration={500} onSetActive={this.handleSetActive}>\r\n                        <DownIcon className={\"reverse\"}/>\r\n                    </Link>\r\n                </Fullpage>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkillsSection;","import React,{Component} from 'react';\r\nimport SnowStorm from 'react-snowstorm';\r\n\r\nimport Navigation from \"./components/Navigation\";\r\nimport TitleSection from \"./sections/TitleSection\";\r\nimport AboutSection from \"./sections/AboutSection\";\r\nimport SkillsSection from \"./sections/SkillsSection\";\r\n\r\nimport './themes.css'\r\nimport themes from './themes'\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n  state ={};\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state.theme = 'default'\r\n    this.themesArray = Object.keys(themes).map((key)=>{\r\n      return themes[key];\r\n    });\r\n  }\r\n  changeTheme= ()=>{\r\n    let index = this.themesArray.indexOf(this.state.theme);\r\n    index = (index+1) % this.themesArray.length;\r\n    this.setState({\r\n      'theme': this.themesArray[index]\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n        <div className=\"App\">\r\n          <SnowStorm/>\r\n          <Navigation    theme={this.state.theme} callback={this.changeTheme}/>\r\n          <TitleSection  theme={this.state.theme} />\r\n          <AboutSection  theme={this.state.theme} />\r\n          <SkillsSection theme={this.state.theme} />\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}